[versions]
agp = "8.8.2"
kotlin = "2.1.0"
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.10.1"
composeBom = "2025.02.00"

#usage version
hiltAndroid = "2.55"
hiltNavigationCompose = "1.2.0"
retrofit = "2.11.0"
loggingInterceptor = "4.12.0"
kotlinxCoroutinesCore = "1.10.1"
converterGson = "2.11.0"
paging3 = "3.3.6"
composeShimmer = "1.3.2"
roomDatabase = "2.6.1"
gson = "2.10.1"
composeIcons = "1.1.1"
coilComposeVersion = "3.0.4"
materialIconsExtended = "1.7.8"
navigationCompose = "2.8.8"
uiTextGoogleFonts = "1.7.8"
datastorePreferences = "1.1.3"
kotlinxSerializationJson = "1.8.0"
kotlinSerialization = "2.1.10"
ksp = "2.0.21-1.0.27"

# map
googleAndroidLibrariesMapsplatformSecretsGradlePlugin = "2.0.1"
mapCompose = "2.11.4"
mapService = "19.1.0"
googleMapPlaces = "3.5.0"

# location service
playServicesLocation = "21.3.0"

# firebase
googleGmsGoogleServices = "4.4.2"
firebaseFirestore = "25.1.3"
firebaseAuth = "23.2.0"

# accompanist permission
accompanistPermissions = "0.32.0"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.10.1"
agoraVoiceSdk = "4.5.0"

[libraries]
# accompanist permission
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

# datastore - preferences
androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core-android", version.ref = "datastorePreferences" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastorePreferences" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }

# hilt
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroid" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroid" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }

# okhttp3
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

# coroutine
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }

# room database
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomDatabase" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomDatabase" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomDatabase" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "roomDatabase" }

# gson converter
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# paging 3
paging-runtime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging3" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging3" }

# viewmodel
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }

#serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
#navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

# shimmer
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }

# more icon
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
# compose Icons
composeIcons-fontAwesome = { module = "br.com.devsrsouza.compose.icons:font-awesome", version.ref = "composeIcons" }
composeIcons-lineAwesome = { module = "br.com.devsrsouza.compose.icons:line-awesome", version.ref = "composeIcons" }
composeIcons-tablerIcons = { module = "br.com.devsrsouza.compose.icons:tabler-icons", version.ref = "composeIcons" }

# google font
androidx-ui-text-google-fonts = { group = "androidx.compose.ui", name = "ui-text-google-fonts", version.ref = "uiTextGoogleFonts" }

# coil
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coilComposeVersion" }
coil3-coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilComposeVersion" }

# location service
play-services-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "playServicesLocation" }

# maps
maps-compose = { group = "com.google.maps.android", name = "maps-compose", version.ref = "mapCompose" }
maps-services = { group = "com.google.android.gms", name = "play-services-maps", version.ref = "mapService" }
google-maps-places = { group = "com.google.android.libraries.places", name = "places", version.ref = "googleMapPlaces" }

# firebase
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebaseFirestore" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }

androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
agora-voice-sdk = { module = "io.agora.rtc:voice-sdk", version.ref = "agoraVoiceSdk" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinSerialization" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-android-libraries-mapsplatform-secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "googleAndroidLibrariesMapsplatformSecretsGradlePlugin" }
google-gms-google-services = { id = "com.google.gms.google-services", version.ref = "googleGmsGoogleServices" }